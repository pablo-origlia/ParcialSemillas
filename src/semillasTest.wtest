import plantas.*
import parcelas.*
import inta.*

describe "Tests para  Parcial 2021 - Segundo Cuatrimestre - Semillas" {

  const menta1 = new Menta(altura = 1)
  const menta2 = new Menta(altura = 0.3)
  const soja1 = new Soja(anioObtencionSemilla = 2009, altura = 0.6)
  const soja2 = new Soja(anioObtencionSemilla = 2010, altura = 1.2)
  const soja3 = new Soja(anioObtencionSemilla = 2006, altura = 0.8)
  const soja4 = new Soja(anioObtencionSemilla = 2015, altura = 0.3)
  const quinoa1 = new Quinoa(anioObtencionSemilla = 2010, horasDeToleranciaAlSol = 12, altura = 0.1)
  const quinoa2 = new Quinoa(anioObtencionSemilla = 2001, horasDeToleranciaAlSol = 9, altura = 0.1)
  const quinoa3 = new Quinoa(anioObtencionSemilla = 2010, horasDeToleranciaAlSol = 8, altura = 0.1)
  const sojaTransgenica1 = new SojaTransgenica(anioObtencionSemilla = 2009, altura = 0.6)
  const hierbaBuena1 = new Hierbabuena(altura = 0.3)
  const parcela1 = new ParcelaEcologica(ancho = 20, largo = 1, horasDeSolPorDia = 8)
  const parcela2 = new ParcelaIndustrial(ancho = 20, largo = 5, horasDeSolPorDia = 7)

  test "Plantas de Menta, espacio y semillas nuevas" {
    assert.that(menta1.daNuevaSemillas())
    assert.equals(3, menta1.espacio())
    assert.notThat(menta2.daNuevaSemillas())
    assert.equals(0.9, menta2.espacio())
  }

  test "Plantas de Soja, espacio, horas de sol que tolera y semillas nuevas" {
    assert.notThat(soja1.daNuevaSemillas())
    assert.equals(7, soja1.horasDeSolQueTolera())
    assert.equals(0.3, soja1.espacio())
    assert.that(soja2.daNuevaSemillas())
    assert.equals(9, soja2.horasDeSolQueTolera())
    assert.equals(0.6, soja2.espacio())
    assert.notThat(soja3.daNuevaSemillas())
    assert.equals(7, soja3.horasDeSolQueTolera())
    assert.equals(0.4, soja3.espacio())
    assert.notThat(soja4.daNuevaSemillas())
    assert.equals(6, soja4.horasDeSolQueTolera())
    assert.equals(0.15, soja4.espacio())
  }

  test "Plantas de Quinoa, semillas nuevas" {
    assert.that(quinoa1.daNuevaSemillas())
    assert.that(quinoa2.daNuevaSemillas())
    assert.notThat(quinoa3.daNuevaSemillas())
  }

  test "Plantas de SojaTransgenica y Hierbabuena, semillas nuevas y espacio" {
    assert.notThat(sojaTransgenica1.daNuevaSemillas())
    assert.equals(0.3, sojaTransgenica1.espacio())
    assert.notThat(hierbaBuena1.daNuevaSemillas())
    assert.equals(1.8, hierbaBuena1.espacio())
  }

  test "Parcela, superficie y cantidad maxima de plantas" {
    assert.equals(20, parcela1.superficie())
    assert.equals(4, parcela1.cantidadMaximaDePlantas())
  }

  test "Parcela con plantas y complicaciones" {
    parcela1.plantar(soja2)
    parcela1.plantar(soja2)
    parcela1.plantar(soja2)
    parcela1.plantar(soja2)
    assert.notThat(parcela1.tieneComplicaciones())
    assert.throwsExceptionWithMessage("No se puede plantar, parcela completa o mucho sol.", { parcela1.plantar(soja2)})
  }

  test "Parcela ideal y no ideal" {
    assert.that(menta1.resultaIdeal(parcela1))
    assert.that(quinoa1.resultaIdeal(parcela1))
    parcela1.plantar(new Soja(anioObtencionSemilla = 2010, altura = 1.8))
    assert.notThat(quinoa1.resultaIdeal(parcela1))
    assert.notThat(soja1.resultaIdeal(parcela1))
    assert.notThat(sojaTransgenica1.resultaIdeal(parcela1))
  }

  test "Asociaci√≥n de plantas" {
    parcela1.plantar(sojaTransgenica1)
    assert.notThat(sojaTransgenica1.seAsociaBien(parcela1))
    parcela2.plantar(quinoa1)
    assert.that(quinoa1.seAsociaBien(parcela2))
  }

  test "INTA" {
    inta.agregarParcela(parcela1)
    inta.agregarParcela(parcela2)
    parcela1.plantar(soja1)
    parcela1.plantar(soja1)
    parcela1.plantar(soja1)
    parcela2.plantar(soja1)
    parcela2.plantar(soja1)
    parcela2.plantar(soja1)
    parcela2.plantar(soja1)
    parcela2.plantar(soja1)
    assert.equals(8, inta.totalDePlantas())
    assert.equals(4, inta.promedioPlantasPorParcela())
    assert.equals(parcela2, inta.parcelaMasAutosustentable())
  }

}

